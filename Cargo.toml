[package]
name = "cratchit"
version = "0.0.6"
authors = ["Scott Johnson <jaywir3@gmail.com>"]
description = "A package for managing accounting data"
license = "MPL-2.0"
readme = "README.md"
keywords = ["accounting", "cratchit", "money", "finance"]
repository = "https://www.github.com/jwir3/cratchit"

[badges]
travis-ci = { repository = "jwir3/cratchit" }
maintenance = { status = "actively-developed" }

# [features]
# default = ["console_error_panic_hook"]

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
json = "0.11.13"
cfg-if = "0.1.2"
wasm-bindgen = "0.2"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
# console_error_panic_hook = { version = "0.1.1", optional = true }
console_error_panic_hook = "0.1.1"

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.2", optional = true }

[dev-dependencies]
galvanic-test = "0.1.4"
wasm-bindgen-test = "0.2"

# [profile.release]
# Enable this option for better time and size profiling.
# debug = true

# Optimize for small code size, rather than speed.
# opt-level = "s"

# Always enable link-time optimizations to shrink binary sizes.
# lto = true
